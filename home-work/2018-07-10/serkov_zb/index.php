<?php
// Обозначаем переменную $numbers как массив
$numbers = array();

// Наполняем массив $numbers размером с 0 до 1000 значениями от 1 до 1000
for ($i = 0; $i < 1000; $i++) {
    $numbers[]=rand(1,1000);
}

// Присваиваем переменной $name случайное значение от 1 до 1000
$name = rand(1,1000);

// Находим в массиве $numbers позицию значения $name и записываем его в переменную $key
$key = array_search($name, $numbers);

// Засекаем время старта первой функции
$start_1 = microtime(true);

// Выводим на экран результат поиска значения $name в массиве $numbers
echo in_array( $name, $numbers );

// Засекаем время после выполнения функции, вычитаем из него время её старта и записываем полученное значение в переменную $time_1
$time_1 = microtime(true) - $start_1;

echo '<hr>';

// Засекаем время старта второй функции
$start_2 = microtime(true);

// Проверяем наличие значения $name в массиве $numbers и, при наличии таковых, выводим на экран соответствующее сообщение
foreach ( $numbers as $value ) {
    if ( $name == $value ) {
        echo '<div>Да, ' . $name . ' в списке под номером ' .$key. ' :)</div>';
        break;
    }
}

// Засекаем время после выполнения второй функции, вычитаем из него время её старта и записываем полученное значение в переменную $time_2
$time_2 = microtime(true) - $start_2;

// Берем разницу между временем выполнения второй и первой функций и записываем полученное значение в переменную $timer
$timer = $time_2 - $time_1;

echo '<hr>';

// Проверяем значение в переменной $timer и выводим на экран соответствующее сообщение
if ($timer > 0){
    echo '<div>Метод №1 работает быстрее</div>';
}elseif ($timer<0){
    echo '<div>Метод №2 работает быстрее</div>';
}else {
    echo '<div>Метода работают одинаково</div>';
}
echo '<hr>';

// Выводим на экран массив $numbers
echo '<pre>';
print_r( $numbers );
echo '</pre>';


/*
1. Создать массив, состаящий из 1000 случайных чисел от 1 до 1000
2. Узнать присутствует ли в сформированном массиве число Х
3. Понять, какой из 2-х методов работает быстрее.
*/